# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2018"
name = "sigstore"
version = "0.6.0"
authors = ["sigstore-rs developers"]
description = "An experimental crate to interact with sigstore"
readme = "README.md"
license = "Apache-2.0"

[[example]]
name = "verify"
path = "examples/cosign/verify/main.rs"

[[example]]
name = "verify-bundle"
path = "examples/cosign/verify-bundle/main.rs"

[[example]]
name = "sign"
path = "examples/cosign/sign/main.rs"

[[example]]
name = "openidconnect"
path = "examples/openidflow/openidconnect/main.rs"

[[example]]
name = "key_pair_gen_sign_verify"
path = "examples/key_interface/key_pair_gen_sign_verify/main.rs"

[[example]]
name = "key_pair_gen_and_export"
path = "examples/key_interface/key_pair_gen_and_export/main.rs"

[[example]]
name = "key_pair_import"
path = "examples/key_interface/key_pair_import/main.rs"

[[example]]
name = "create_log_entry"
path = "examples/rekor/create_log_entry/main.rs"

[[example]]
name = "get_log_entry_by_index"
path = "examples/rekor/get_log_entry_by_index/main.rs"

[[example]]
name = "get_log_entry_by_uuid"
path = "examples/rekor/get_log_entry_by_uuid/main.rs"

[[example]]
name = "get_log_info"
path = "examples/rekor/get_log_info/main.rs"

[[example]]
name = "get_log_proof"
path = "examples/rekor/get_log_proof/main.rs"

[[example]]
name = "get_public_key"
path = "examples/rekor/get_public_key/main.rs"

[[example]]
name = "search_index"
path = "examples/rekor/search_index/main.rs"

[[example]]
name = "search_log_query"
path = "examples/rekor/search_log_query/main.rs"

[[example]]
name = "fulcio_cert"
path = "examples/fulcio/cert/main.rs"

[dependencies]
async-trait = "0.1.52"
base64 = "0.21.0"
cfg-if = "1.0.0"
const-oid = "0.9.1"
der = "0.6.1"
getrandom = "0.2.8"
lazy_static = "1.4.0"
olpc-cjson = "0.1"
p256 = "0.12"
p384 = "0.12"
pem = "1.0.2"
pkcs1 = "0.4.0"
rsa = "0.8.0"
scrypt = "0.10.0"
serde_json = "1.0.79"
thiserror = "1.0.30"
tracing = "0.1.31"
url = "2.2.2"
webbrowser = "0.8.4"
xsalsa20poly1305 = "0.9.0"
zeroize = "1.5.7"

[dependencies.cached]
version = "0.42.0"
optional = true

[dependencies.chrono]
version = "0.4.23"

[dependencies.digest]
version = "0.10.3"
default-features = false

[dependencies.ecdsa]
version = "0.15"
features = [
    "pkcs8",
    "digest",
    "der",
]

[dependencies.ed25519]
version = "=2.1"
features = ["alloc"]

[dependencies.ed25519-dalek]
version = "2.0.0-pre.0"
features = [
    "pkcs8",
    "rand_core",
]

[dependencies.elliptic-curve]
version = "0.12.2"
features = [
    "arithmetic",
    "pem",
]

[dependencies.oci-distribution]
version = "0.9"
optional = true
default-features = false

[dependencies.openidconnect]
version = "2.3"
features = ["reqwest"]
optional = true
default-features = false

[dependencies.picky]
version = "7.0.0-rc.5"
features = [
    "x509",
    "ec",
]
default-features = false

[dependencies.pkcs8]
version = "0.9.0"
features = [
    "pem",
    "alloc",
    "pkcs5",
    "encryption",
]

[dependencies.rand]
version = "0.8.5"
features = [
    "getrandom",
    "std",
]

[dependencies.regex]
version = "1.5.5"
optional = true

[dependencies.reqwest]
version = "0.11"
features = [
    "json",
    "multipart",
]
optional = true
default-features = false

[dependencies.serde]
version = "1.0.136"
features = ["derive"]

[dependencies.sha2]
version = "0.10.6"
features = ["oid"]

[dependencies.signature]
version = "2.0"

[dependencies.tokio]
version = "1.17.0"
features = ["rt"]

[dependencies.tough]
version = "0.13"
features = ["http"]
optional = true

[dependencies.x509-cert]
version = "0.1.1"
features = [
    "pem",
    "std",
]

[dev-dependencies]
assert-json-diff = "2.0.2"
chrono = "0.4.20"
docker_credential = "1.1.0"
openssl = "0.10.38"
rstest = "0.16.0"
serial_test = "1.0.0"
tempfile = "3.3.0"
testcontainers = "0.14"

[dev-dependencies.anyhow]
version = "1.0"
features = ["backtrace"]

[dev-dependencies.clap]
version = "4.0.8"
features = ["derive"]

[dev-dependencies.tracing-subscriber]
version = "0.3.9"
features = ["env-filter"]

[features]
cached-client = ["cached"]
cert = []
cosign = []
cosign-native-tls = [
    "oci-distribution/native-tls",
    "cert",
    "cosign",
    "registry-native-tls",
]
cosign-rustls-tls = [
    "oci-distribution/rustls-tls",
    "cert",
    "cosign",
    "registry-rustls-tls",
]
default = [
    "full-native-tls",
    "cached-client",
    "tuf",
]
fulcio = []
fulcio-native-tls = [
    "oauth-native-tls",
    "reqwest/native-tls",
    "fulcio",
]
fulcio-rustls-tls = [
    "oauth-rustls-tls",
    "reqwest/rustls-tls",
    "fulcio",
]
full-native-tls = [
    "fulcio-native-tls",
    "rekor-native-tls",
    "cosign-native-tls",
    "mock-client-native-tls",
]
full-rustls-tls = [
    "fulcio-rustls-tls",
    "rekor-rustls-tls",
    "cosign-rustls-tls",
    "mock-client-rustls-tls",
]
mock-client = []
mock-client-native-tls = [
    "oci-distribution/native-tls",
    "mock-client",
]
mock-client-rustls-tls = [
    "oci-distribution/rustls-tls",
    "mock-client",
]
oauth = []
oauth-native-tls = [
    "openidconnect/native-tls",
    "oauth",
]
oauth-rustls-tls = [
    "openidconnect/rustls-tls",
    "oauth",
]
registry = []
registry-native-tls = [
    "oci-distribution/native-tls",
    "registry",
]
registry-rustls-tls = [
    "oci-distribution/rustls-tls",
    "registry",
]
rekor = ["reqwest"]
rekor-native-tls = [
    "reqwest/native-tls",
    "rekor",
]
rekor-rustls-tls = [
    "reqwest/rustls-tls",
    "rekor",
]
test-registry = []
tuf = [
    "tough",
    "regex",
]
wasm = ["getrandom/js"]
